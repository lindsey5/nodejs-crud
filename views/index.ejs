<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student List</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>Student ID</th>
                    <th>Fullname</th>
                    <th>Course</th>
                    <th>Section</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="table-body">
            </tbody>
        </table>
    </div>

    <button onclick="openCreateModal()" class="create-btn">+</button>
    
    <div class="modal-container" id="update-modal-container">
        <div class="update-modal">
            <form id="update-form">
                <button type="button" class="cancel-btn" onclick="hideUpdateModal()">X</button>

                <input type="hidden" id="update-student_id">
                
                <div>
                    <label for="firstname">Firstname</label>
                    <input type="text" id="updated-firstname">
                </div>

                <div>
                    <label for="lastname">Lastname</label>
                    <input type="text" id="updated-lastname">
                </div>

                <div>
                    <label for="course">Course</label>
                    <input type="text" id="updated-course">
                </div>

                <div>
                    <label for="section">Section</label>
                    <input type="text" id="updated-section">
                </div>
                <button id="submit" onclick="updateStudent()">Update</button>
            </form>
        </div>
    </div>

    <div class="modal-container" id="create-modal-container">
        <div class="create-modal">
                <button type="button" class="cancel-btn" onclick="hideCreateModal()">X</button>

                <div>
                    <label for="student_id">Student ID</label>
                    <input type="text" id="create-student_id">
                </div>
                
                <div>
                    <label for="firstname">Firstname</label>
                    <input type="text" id="create-firstname">
                </div>

                <div>
                    <label for="lastname">Lastname</label>
                    <input type="text" id="create-lastname">
                </div>

                <div>
                    <label for="course">Course</label>
                    <input type="text" id="create-course">
                </div>

                <div>
                    <label for="section">Section</label>
                    <input type="text" id="create-section">
                </div>
                <button id="submit" onclick="createStudent()">Submit</button>
        </div>
    </div>
</body>
</html>
<script>
    fetchStudents();
    async function fetchStudents() {
    try {
        const response = await fetch('/api/students');
        const students = await response.json();
        
        let html = '';
        students.forEach(student => {
            html += `
                <tr>
                    <td>${student.student_id}</td>
                    <td>${student.firstname} ${student.lastname}</td>
                    <td>${student.course}</td>
                    <td>${student.section}</td>
                    <td class="actions">
                        <button class="update-btn" onclick='openUpdateModal(${JSON.stringify(student.student_id)}, 
                        "${student.firstname}", 
                        "${student.lastname}", 
                        "${student.course}", 
                        "${student.section}")'
                    >Update</button>
                        <button class="delete-btn" onclick='deleteStudent(${JSON.stringify(student.student_id)})'>Delete</button>
                    </td>
                </tr>
            `;
        });

        document.getElementById('table-body').innerHTML = html;
    } catch (err) {
        // Log any errors that occur during the fetch operation
        console.error('There was a problem with the fetch operation:', err);
    }
}

    // Open & Hide Update Modal
    function openUpdateModal(student_id, firstname, lastname, course, section){
        document.getElementById('update-modal-container').style.display = 'flex';
        document.getElementById('update-student_id').value = student_id
        document.getElementById('updated-firstname').value = firstname;
        document.getElementById('updated-lastname').value = lastname;
        document.getElementById('updated-course').value = course;
        document.getElementById('updated-section').value = section;
    }

    function hideUpdateModal(){
        document.getElementById('update-modal-container').style.display = 'none';
    }

    // Open & Hide Create Modal
    function openCreateModal(student_id, firstname, lastname, course, section){
        document.getElementById('create-modal-container').style.display = 'flex';
    }

    function hideCreateModal(){
        document.getElementById('create-modal-container').style.display = 'none';
    }

    // Delete student function
    async function deleteStudent(studentId) {
            console.log(studentId);
            if (confirm("Are you sure you want to delete this student?")) {
                try {
                    const response = await fetch(`/api/students/${studentId}`, {
                        method: 'DELETE',
                    });
                    const result = await response.json();
                    window.location.href = result.redirect;
                } catch (error) {
                    console.error('Error deleting student:', error);
                }
            }
    }

    // Update student
    async function updateStudent() {
        const studentId = document.getElementById('update-student_id').value;
        const firstname = document.getElementById('updated-firstname').value;
        const lastname = document.getElementById('updated-lastname').value;
        const course = document.getElementById('updated-course').value;
        const section = document.getElementById('updated-section').value;

        try {
            const response = await fetch(`/api/students/${studentId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    firstname,
                    lastname,
                    course,
                    section
                }),
            });
            const result = await response.json();
                window.location.href = result.redirect; // Redirect or update the page
        } catch (error) {
            console.error('Error updating student:', error);
        }
    }
    
    async function createStudent() {
        const student_id = document.getElementById('create-student_id').value;
        const firstname = document.getElementById('create-firstname').value;
        const lastname = document.getElementById('create-lastname').value;
        const course = document.getElementById('create-course').value;
        const section = document.getElementById('create-section').value;

        try {
            const response = await fetch('/api/students', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    student_id,
                    firstname,
                    lastname,
                    course,
                    section
                }),
            });
            const result = await response.json();
                if (response.ok) {
                    window.location.href = result.redirect; // Redirect or update the page
                } else {
                    alert(result.error);
                }
            } catch (error) {
                console.error('Error creating student:', error);
            }
        };
    
  </script>